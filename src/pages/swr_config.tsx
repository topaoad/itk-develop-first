// subtweet

import type { GetStaticProps, InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { MainView } from "../components/PageContainer/MainView";
import { BlogArchive } from "../components/PageContainer/BlogArchive";
import { PortFolio } from "../components/PageContainer/PortFolio";
import { GitHub } from "../components/PageContainer/GitHub";
import { Twitter } from "../components/PageContainer/Twitter";
import { Layout } from "src/components/Layout";
import { client } from "src/lib/miscrocms/client";
import type { Article, PortfolioArticle } from "src/types/article";
import { BlogPortfolioProps } from "src/types/microCmsData";
import Link from "next/link";
import { Button } from "@mantine/core";
import useSWR, { SWRConfig } from "swr";
import { twitterUser, twitterTweets } from "src/types/twitter";

export type TwitterSwr = {
  fallback: AAA;
};

type AAA = {
  string: { user: twitterUser; tweets: Array<twitterTweets> };
};


type VVV={
  fallback: AAA;

}

// const Home: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = ({ blog }) => {
const SwrConfig: NextPage<VVV> = (props) => {
  //引数をpropsで受け取った場合は、下記分散代入をかませる。
  const { fallback } = props;
  console.log(fallback);
  return (
    <div className={styles.container}>
      <Head>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <SWRConfig value={{ fallback }}>
        <Layout>
          <MainView />
          <Twitter />
        </Layout>
        はははっはは－ーーー
      </SWRConfig>
    </div>
  );
};

export default SwrConfig;

export const getServerSideProps = async () => {
  // const data = await client.get({ endpoint: "mainblog" });
  const API_URL =
    // これはエラー
    // "/api/subtweet";
    // デプロイ後のサイトだとOK
    "https://itk-develop-first-lkvzvgsjy-topaoad.vercel.app/api/tweet";
  const response = await fetch(API_URL);
  const data = await response.json();

  return {
    props: {
      fallback: {
        [API_URL]: data,
      },
    },
  };
};
