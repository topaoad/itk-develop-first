import { gql, useQuery } from "@apollo/client";
import type { NextPage } from "next";
import Head from "next/head";
import { Layout } from "src/components/Layout";
import { UseGitHubInfoQuery } from "src/types/githubGraphQL";

import styles from "../styles/Home.module.css";

// const GET_LOCATIONS = gql`
//   query GetLocations {
//     locations {
//       id
//       name
//       description
//       photo
//     }
//   }
//  `;

const GET_LOCATIONS = gql`
  query UseGitHubInfo {
    user(login: "topaoad") {
      name
      url
      repositories(last: 5, orderBy: { field: UPDATED_AT, direction: ASC }) {
        totalCount
        nodes {
          name
          description
          createdAt
          updatedAt
          url
          forkCount
          stargazerCount
          languages(orderBy: { field: SIZE, direction: DESC }, last: 10) {
            totalCount
            totalSize
            edges {
              node {
                id
                name
                color
              }
              size
            }
          }
        }
      }
    }
  }
`;

const Apollotest: NextPage = () => {
  const { data, error, loading } = useQuery(GET_LOCATIONS);
  const dataQL: UseGitHubInfoQuery = data;
  console.log(dataQL);

  return (
    <div className={styles.container}>
      <Head>
        <title>Apolltest</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Layout>
        <div>no way to say</div>
      </Layout>
    </div>
  );
};

export default Apollotest;
