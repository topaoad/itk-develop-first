# パターン1 パブリックスキーマを使用。こちらを採用。
# typescript-operationsを使うことで型定義をするための○○Queryが生成される。
overwrite: true
schema: "./schema.docs.graphql"
documents: "./query.graphql"
generates:
  src/types/githubGraphQLTest.ts:
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-react-apollo"
    config:
      # 型の個別定義...
      scalars:
        createdAt: DateTime
        updatedAt: DateTime
        url: URI
        

# パターン1.5 resolver作成用
# overwrite: true
# schema: "./schema.docs.graphql"
# documents: "./query.graphql"
# generates:
#   src/types/githubGraphQL.ts:
#     plugins:
#       - "typescript"
#       - "typescript-operations"
#       - typescript-resolvers
#       - "typescript-react-apollo"


# パターン2 エンドポイントを使用(認証必須）。こちらだとどうしてもQueryができないので断念。
# overwrite: true
# schema:
#   "https://api.github.com/graphql":
#     headers: 
#       Authorization:headers: `Bearer ${process.env.GH_TOKEN}` 
#       documents: "./query.graphql"
# generates:
#   src/types/githubsample.ts:
#     plugins:
#       - typescript
#       - "typescript-operations"  
#       - typescript-graphql-request
#       - "typescript-react-apollo"


